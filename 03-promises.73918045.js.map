{"mappings":"YAAA,IAAMA,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAKtC,SAASG,EAAcC,EAAUC,GAiB/B,OAhBgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IAbcN,SAASC,cAAc,yBAE/Ba,iBAAiB,SAwC9B,SAAwBC,GACtBA,EAAIC,iBAMJ,IAJA,IAAIC,EAAWC,OAAOnB,EAAMoB,OACxBC,EAAUF,OAAOhB,EAAKiB,OAGjBE,GAFOH,OAAOf,EAAOgB,OAEjB,GAAGE,EAAIlB,EAAOgB,MAAOE,GAAK,EACrCjB,EAAc,EAAIiB,EAAGJ,EAAWI,EAAID,GACrCE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALV,MACjBY,QAAQC,IAAI,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANH,EAAM,M,IAE3DI,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUwB,EAAKN,EAALV,MAClBY,QAAQC,IAAI,sBAAqCC,OAAftB,EAAS,QAAYsB,OAANE,EAAM,M,IAEvDZ,GAAYG,C","sources":["src/js/03-promises.js"],"sourcesContent":["const delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst buttonSubmit = document.querySelector('button[type=\"submit\"]');\n\nbuttonSubmit.addEventListener(\"click\", onButtonSubmit);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  // const shouldResolve = Math.random() > 0.3;\n  // if (shouldResolve) {\n  //   // Fulfill\n  // } else {\n  //   // Reject\n  // }\n  return promise;\n}\n\n// function onButtonSubmit(evt) {\n//   evt.preventDefault();\n\n//   const numDelay = Number(delay.value);\n//   const numStep = Number(step.value);\n//   const numAmount = Number(amount.value);\n//   for (let position = 0; position <= numAmount; position += 1) {\n//     createPromise(position, delay)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n//     numDelay += numStep;\n//   }\n//   // numDelay += numStep;\n// }\nfunction onButtonSubmit(evt) {\n  evt.preventDefault();\n\n  let numDelay = Number(delay.value);\n  let numStep = Number(step.value);\n  let numAmount = Number(amount.value);\n\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(1 + i, numDelay + i * numStep)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    numDelay += numStep;\n  }\n  // numDelay += numStep;\n}\n"],"names":["$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","evt","preventDefault","numDelay","Number","value","numStep","i","then","param","delay2","console","log","concat","catch","delay3"],"version":3,"file":"03-promises.73918045.js.map"}